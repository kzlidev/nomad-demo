#!/bin/bash
echo "Initializing instance..."

# Override default to https
echo export NOMAD_ADDR=https://127.0.0.1:4646 >> /etc/profile
export INSTANCE_NAME=$(ec2-metadata -i | cut -d " " -f 2)

# Update dependencies
sudo yum update -y
sudo yum install -y yum-utils
sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
sudo yum -y install nomad

# Needed for load balancer
# sudo yum -y install consul

# Install Docker - our clients will be used to run Docker
sudo yum install -y docker
sudo service docker start

# Create certificates
mkdir /etc/certs
cat << EOF >> /etc/certs/ca.crt
${ca_crt_content}
EOF
cat << EOF >> /etc/certs/nomad.crt
${nomad_cert_content}
EOF
cat << EOF >> /etc/certs/nomad.key
${nomad_key_content}
EOF

# Trust the CA
aws s3 cp ${update_certificate_store_s3_path} /home/ec2-user/update-certificate-store.sh
chmod +x /home/ec2-user/update-certificate-store.sh
./home/ec2-user/update-certificate-store.sh --cert-file-path /etc/certs/ca.crt

# Remove default nomad config
rm /etc/nomad.d/nomad.hcl

# Create new nomad config
cat << EOF >> /etc/nomad.d/nomad.hcl
# Credit: https://github.com/btkrausen/hashicorp/tree/master/nomad
# Basic Starter Configuration Used for Nomad Course Demonstrations
# This is NOT a Secure Complete Nomad Server Configuration

name = "$INSTANCE_NAME"

# Directory to store agent state
data_dir = "/etc/nomad.d/data"

# Address the Nomad agent should bing to for networking
# 0.0.0.0 is the default and results in using the default private network interface
# Any configurations under the addresses parameter will take precedence over this value
bind_addr = "0.0.0.0"

ports {
  http = 4646
  rpc  = 4647
  serf = 4648
}

# TLS configurations
tls {
  http = true
  rpc  = true

  ca_file   = "/etc/certs/ca.crt"
  cert_file = "/etc/certs/nomad.crt"
  key_file  = "/etc/certs/nomad.key"
}

# Specify the datacenter the agent is a member of
datacenter = "dc1"

# Logging Configurations
log_level = "INFO"
log_file  = "/etc/nomad.d/nomad.log"

# Server & Raft configuration
server {
  enabled = false
}

# Client Configuration - Node can be Server & Client
client {
  enabled = true

  server_join {
    retry_join = ["provider=aws tag_key=${tag_key} tag_value=${tag_value}"]
  }

  meta {
    purpose = "${purpose}"
    env = "non-prod"
  }
}
EOF

# echo "Starting Consul..."
# consul agent -dev

echo "Starting Nomad..."
systemctl start nomad
nomad server members
nomad node status

# View the status of node, events, resources, and allocations
# nomad status <node_id>

# Disable a client's eligibility to accept new allocations
# nomad node eligibility -disable <node_prefix>

# Drain the allocations from a client node
# nomad node drain -enable <node_prefix>